!+
! Lattice to model a spin single resonance.
!
! See the "Linear Resonance Analysis" section in the Bmad manual.
! The resonance is excited by the horizontal mode.
! The vertical and longitudinal motion is included for completeness but does not affect the resonance.
!
! The spin transport is ds/dtheta = Omega x s
! The ring is divided into 1000 sections. In each section, the rotation vector Omega is approximated as 
! being constant so that the spin transport equation is easily integrated.
!-

parameter[geometry] = Closed
parameter[e_tot] = 1e9
bmad_com[spin_tracking_on] = T

beginning[beta_a]   = 10
beginning[beta_b]   = 10

! Assume for simplicity that alpha_x = 0, etc.

Qx = 0.40    ! Horizontal tune
Qy = 0.234    ! Vertical tune. 
Qz = 0.345    ! Longitudinal tune. Assuming below transition so positive Qz rotates clockwise like Qx and Qy.
beta_x = 1.0
alpha_x = 10
beta_y = 1.0
beta_z = 1.0

phi_0 = 0          ! Initial horizontal motion phase
J_action = 1       ! Initial horizontal action

delta = -0.10      ! Q_spin - Qx tune difference
xi_res = 1e-4      ! Normalized resonance strength

cmat11 = 0.1         ! X-Y mode coupling
cmat12 = 0.2
cmat21 = 0.3
cmat22 = 0.4

gamma_c = sqrt(1 - (cmat11 * cmat22 - cmat12 * cmat21))

!

particle_start[x]  =  sqrt(2 * J_action * beta_x) * cos(phi_0)
particle_start[px] = -sqrt(2 * J_action / beta_x) * (alpha_x * cos(phi_0) + sin(phi_0))
particle_start[y]  = 0.00
particle_start[py] = 0.00
particle_start[z]  = 0.00
particle_start[pz] = 0.00

!

!particle_start[spin_x] = sqrt(j_action) * sqrt(2)
!particle_start[spin_y] = 0
!particle_start[spin_z] = delta * sqrt(2) / xi_res

!

epsilon_res = sqrt(J_action) * xi_res   ! Unnormalized resonance strength
nu0 = Qx + delta
ang0 = sqrt(nu0^2 + epsilon_res^2) 
g = twopi / 1000
ang_1step = g * ang0
f = sin(ang_1step/2) * epsilon_res / (ang0 * sqrt(2 * beta_x))

! ele_in transforms from laboratory to uncoupled coords.
! ele_out transforms form uncoupled to laboratory coords.
! ele1 rotates the spin through a ring "section" which here is 1/1000^th of the ring.
! ele2 rotates the orbital coords through a ring "section" which here is 1/1000^th of the ring.
! ele22 is a half rotation of ele2 used so the ring is symmetric.
! Ring symmetry helps cancel out effects due to the finite number of (ele1, ele2) sections used when the
! spin/orbit is evaluated at the lattice ends.

ele_in: Taylor, {S1: 1 |},
          {1: gamma_c |1}, {1: -cmat11 |3}, {1: -cmat12 |4},
          {2: gamma_c |2}, {2: -cmat21 |3}, {2: -cmat22 |4},
          {3:  cmat22 |1}, {3: -cmat12|2}, {3: gamma_c |3},
          {4: -cmat21 |1}, {4:  cmat11|2}, {4: gamma_c |4}

ele_out: Taylor, {S1: 1 |},
          {1: gamma_c |1}, {1: cmat11 |3}, {1: cmat12 |4},
          {2: gamma_c |2}, {2: cmat21 |3}, {2: cmat22 |4},
          {3: -cmat22 |1}, {3:  cmat12|2}, {3: gamma_c |3},
          {4:  cmat21 |1}, {4: -cmat11|2}, {4: gamma_c |4}

ele1: Taylor, {S1: cos(ang_1step/2) |}, 
                 {Sx:  f * (cos(phi_0) - sin(phi_0) * alpha_x) |1}, {Sx: -f * beta_x * sin(phi_0) |2},
                 {Sy: -f * (sin(phi_0) + cos(phi_0) * alpha_x) |1}, {Sy: -f * beta_x * cos(phi_0) |2},
                 {Sz: sin(ang_1step/2) * nu0 / ang0 |}

cx = cos(g*Qx)
sx = sin(g*Qx)
gx = (1 + alpha_x^2) / beta_x
ele2: Taylor, {1: cx + alpha_x*sx |1}, {1: beta_x*sx |2}, {2: -gx*sx |1}, {2: cx - alpha_x*sx |2}, 
              {3: cos(g*Qy) |3}, {3: beta_y * sin(g*Qy) |4}, {4: -sin(g*Qy) / beta_y |3}, {4: cos(g*Qy) |4},
              {5: cos(g*Qz) |5}, {5: beta_z * sin(g*Qz) |6}, {6: -sin(g*Qz) / beta_z |5}, {6: cos(g*Qz) |6},
              {S1: 1 |}

g2  = g / 2
cx2 = cos(g2*Qx)
sx2 = sin(g2*Qx)
ele22: Taylor, {1: cx2 + alpha_x*sx2 |1}, {1: beta_x*sx2 |2}, {2: -gx*sx2 |1}, {2: cx2 - alpha_x*sx2 |2}, 
               {3: cos(g2*Qy) |3}, {3: beta_y * sin(g2*Qy) |4}, {4: -sin(g2*Qy) / beta_y |3}, {4: cos(g2*Qy) |4},
               {5: cos(g2*Qz) |5}, {5: beta_z * sin(g2*Qz) |6}, {6: -sin(g2*Qz) / beta_z |5}, {6: cos(g2*Qz) |6},
               {S1: 1 |}

ring: line = (ele_in, ele22, 999*(ele1, ele2), ele1, ele22, ele_out)
use, ring


